/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9 at Sat Jan 13 16:26:31 2018. */

#ifndef PB_BE_LGHS_GATE_PROTO_GATE_PB_H_INCLUDED
#define PB_BE_LGHS_GATE_PROTO_GATE_PB_H_INCLUDED
#include "pb.h"

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _be_lghs_gate_proto_GateOpenRequest {
    uint64_t cardId;
    uint64_t tokenLow;
    uint64_t tokenHigh;
    pb_callback_t pin;
/* @@protoc_insertion_point(struct:be_lghs_gate_proto_GateOpenRequest) */
} be_lghs_gate_proto_GateOpenRequest;

typedef struct _be_lghs_gate_proto_GateOpenResponse {
    uint64_t cardId;
    bool ok;
/* @@protoc_insertion_point(struct:be_lghs_gate_proto_GateOpenResponse) */
} be_lghs_gate_proto_GateOpenResponse;

/* Default values for struct fields */

/* Initializer values for message structs */
#define be_lghs_gate_proto_GateOpenRequest_init_default {0, 0, 0, {{NULL}, NULL}}
#define be_lghs_gate_proto_GateOpenResponse_init_default {0, 0}
#define be_lghs_gate_proto_GateOpenRequest_init_zero {0, 0, 0, {{NULL}, NULL}}
#define be_lghs_gate_proto_GateOpenResponse_init_zero {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define be_lghs_gate_proto_GateOpenRequest_cardId_tag 1
#define be_lghs_gate_proto_GateOpenRequest_tokenLow_tag 2
#define be_lghs_gate_proto_GateOpenRequest_tokenHigh_tag 3
#define be_lghs_gate_proto_GateOpenRequest_pin_tag 4
#define be_lghs_gate_proto_GateOpenResponse_cardId_tag 1
#define be_lghs_gate_proto_GateOpenResponse_ok_tag 2

/* Struct field encoding specification for nanopb */
extern const pb_field_t be_lghs_gate_proto_GateOpenRequest_fields[5];
extern const pb_field_t be_lghs_gate_proto_GateOpenResponse_fields[3];

/* Maximum encoded size of messages (where known) */
/* be_lghs_gate_proto_GateOpenRequest_size depends on runtime parameters */
#define be_lghs_gate_proto_GateOpenResponse_size 13

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define GATE_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
